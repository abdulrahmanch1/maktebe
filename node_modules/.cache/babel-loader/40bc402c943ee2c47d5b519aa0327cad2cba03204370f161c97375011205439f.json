{"ast":null,"code":"var _jsxFileName = \"/home/abdulrahman/maktaba/src/contexts/FavoritesContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useMemo, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FavoritesContext = /*#__PURE__*/createContext({\n  favorites: [],\n  toggleFavorite: bookId => {},\n  isFavorite: bookId => false\n});\nexport const FavoritesProvider = ({\n  children\n}) => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const {\n    isLoggedIn,\n    user,\n    token\n  } = useContext(AuthContext); // Get token from AuthContext\n\n  // Fetch favorites when user logs in or changes\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (isLoggedIn && user && user._id && token) {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/users/${user._id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setFavorites(response.data.favorites || []);\n        } catch (error) {\n          console.error(\"Failed to fetch favorites:\", error);\n          setFavorites([]);\n        }\n      } else {\n        setFavorites([]); // Clear favorites if not logged in\n      }\n    };\n    fetchFavorites();\n  }, [isLoggedIn, user, token]); // Add token to dependency array\n\n  const toggleFavorite = async bookId => {\n    if (!isLoggedIn || !user || !user._id || !token) {\n      alert(\"Please log in to add books to your favorites.\");\n      return;\n    }\n    try {\n      if (favorites.includes(bookId)) {\n        // Remove from favorites\n        await axios.delete(`http://localhost:5000/api/users/${user._id}/favorites/${bookId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFavorites(favorites.filter(id => id !== bookId));\n      } else {\n        // Add to favorites\n        await axios.post(`http://localhost:5000/api/users/${user._id}/favorites`, {\n          bookId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFavorites([...favorites, bookId]);\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle favorite:\", error);\n      alert(\"Failed to update favorites. Please try again.\");\n    }\n  };\n  const isFavorite = bookId => {\n    return favorites.includes(bookId);\n  };\n  const contextValue = useMemo(() => ({\n    favorites,\n    toggleFavorite,\n    isFavorite\n  }), [favorites, toggleFavorite, isFavorite]);\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritesProvider, \"myY+kURZfLugBbNp46kFVaTqO9c=\");\n_c = FavoritesProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoritesProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","useEffect","useContext","axios","AuthContext","jsxDEV","_jsxDEV","FavoritesContext","favorites","toggleFavorite","bookId","isFavorite","FavoritesProvider","children","_s","setFavorites","isLoggedIn","user","token","fetchFavorites","_id","response","get","headers","Authorization","data","error","console","alert","includes","delete","filter","id","post","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abdulrahman/maktaba/src/contexts/FavoritesContext.js"],"sourcesContent":["import React, { createContext, useState, useMemo, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"./AuthContext\";\n\nexport const FavoritesContext = createContext({\n  favorites: [],\n  toggleFavorite: (bookId) => {},\n  isFavorite: (bookId) => false,\n});\n\nexport const FavoritesProvider = ({ children }) => {\n  const [favorites, setFavorites] = useState([]);\n  const { isLoggedIn, user, token } = useContext(AuthContext); // Get token from AuthContext\n\n  // Fetch favorites when user logs in or changes\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (isLoggedIn && user && user._id && token) {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/users/${user._id}`, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n          setFavorites(response.data.favorites || []);\n        } catch (error) {\n          console.error(\"Failed to fetch favorites:\", error);\n          setFavorites([]);\n        }\n      } else {\n        setFavorites([]); // Clear favorites if not logged in\n      }\n    };\n    fetchFavorites();\n  }, [isLoggedIn, user, token]); // Add token to dependency array\n\n  const toggleFavorite = async (bookId) => {\n    if (!isLoggedIn || !user || !user._id || !token) {\n      alert(\"Please log in to add books to your favorites.\");\n      return;\n    }\n\n    try {\n      if (favorites.includes(bookId)) {\n        // Remove from favorites\n        await axios.delete(`http://localhost:5000/api/users/${user._id}/favorites/${bookId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setFavorites(favorites.filter((id) => id !== bookId));\n      } else {\n        // Add to favorites\n        await axios.post(`http://localhost:5000/api/users/${user._id}/favorites`, { bookId }, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setFavorites([...favorites, bookId]);\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle favorite:\", error);\n      alert(\"Failed to update favorites. Please try again.\");\n    }\n  };\n\n  const isFavorite = (bookId) => {\n    return favorites.includes(bookId);\n  };\n\n  const contextValue = useMemo(\n    () => ({\n      favorites,\n      toggleFavorite,\n      isFavorite,\n    }),\n    [favorites, toggleFavorite, isFavorite]\n  );\n\n  return (\n    <FavoritesContext.Provider value={contextValue}>\n      {children}\n    </FavoritesContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}